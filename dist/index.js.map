{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/factory.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar betaln = require( '@stdlib/math-base-special-betaln' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar log1p = require( '@stdlib/math-base-special-log1p' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\n\n\n// MAIN //\n\n/**\n* Evaluates the natural logarithm of the probability density function (logPDF) for a beta prime distribution with first shape parameter `alpha` and second shape parameter `beta` at a value `x`.\n*\n* @param {number} x - input value\n* @param {PositiveNumber} alpha - first shape parameter\n* @param {PositiveNumber} beta - second shape parameter\n* @returns {number} evaluated logPDF\n*\n* @example\n* var y = logpdf( 0.5, 1.0, 1.0 );\n* // returns ~-0.811\n*\n* @example\n* var y = logpdf( 0.5, 2.0, 4.0 );\n* // returns ~-0.13\n*\n* @example\n* var y = logpdf( 0.2, 2.0, 2.0 );\n* // returns ~-0.547\n*\n* @example\n* var y = logpdf( 0.8, 4.0, 4.0 );\n* // returns ~-0.43\n*\n* @example\n* var y = logpdf( -0.5, 4.0, 2.0 );\n* // returns -Infinity\n*\n* @example\n* var y = logpdf( 0.5, -1.0, 0.5 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.5, 0.5, -1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( NaN, 1.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.5, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = logpdf( 0.5, 1.0, NaN );\n* // returns NaN\n*/\nfunction logpdf( x, alpha, beta ) {\n\tvar out;\n\n\tif (\n\t\tisnan( x ) ||\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x <= 0.0 ) {\n\t\t// Support of the BetaPrime distribution: (0,\u221E)\n\t\treturn NINF;\n\t}\n\tout = ( alpha-1.0 ) * ln( x );\n\tout -= ( alpha+beta ) * log1p( x );\n\tout -= betaln( alpha, beta );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = logpdf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar constantFunction = require( '@stdlib/utils-constant-function' );\nvar betaln = require( '@stdlib/math-base-special-betaln' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar log1p = require( '@stdlib/math-base-special-log1p' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the natural logarithm of the probability density function (logPDF) for a beta prime distribution with first shape parameter `alpha` and second shape parameter `beta`.\n*\n* @param {PositiveNumber} alpha - first shape parameter\n* @param {PositiveNumber} beta - second shape parameter\n* @returns {Function} logPDF\n*\n* @example\n* var logpdf = factory( 0.5, 0.5 );\n*\n* var y = logpdf( 0.8 );\n* // returns ~-1.62\n*\n* y = logpdf( 0.3 );\n* // returns ~-0.805\n*/\nfunction factory( alpha, beta ) {\n\tvar betalnAB;\n\tif (\n\t\tisnan( alpha ) ||\n\t\tisnan( beta ) ||\n\t\talpha <= 0.0 ||\n\t\tbeta <= 0.0\n\t) {\n\t\treturn constantFunction( NaN );\n\t}\n\tbetalnAB = betaln( alpha, beta );\n\treturn logpdf;\n\n\t/**\n\t* Evaluates the natural logarithm of the probability density function (PDF) for a beta prime distribution.\n\t*\n\t* @private\n\t* @param {number} x - input value\n\t* @returns {number} evaluated natural logarithm of the PDF\n\t*\n\t* @example\n\t* var y = logpdf( 0.3 );\n\t* // returns <number>\n\t*/\n\tfunction logpdf( x ) {\n\t\tvar out;\n\t\tif ( isnan( x ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( x <= 0.0 ) {\n\t\t\t// Support of the BetaPrime distribution: (0,\u221E)\n\t\t\treturn NINF;\n\t\t}\n\t\tout = ( alpha-1.0 ) * ln( x );\n\t\tout -= ( alpha+beta ) * log1p( x );\n\t\tout -= betalnAB;\n\t\treturn out;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Evaluate the natural logarithm of the probability density function (logPDF) for a beta prime distribution.\n*\n* @module @stdlib/stats-base-dists-betaprime-logpdf\n*\n* @example\n* var logpdf = require( '@stdlib/stats-base-dists-betaprime-logpdf' );\n*\n* var y = logpdf( 0.5, 1.0, 1.0 );\n* // returns ~-0.811\n*\n* y = logpdf( 0.5, 2.0, 4.0 );\n* // returns ~-0.13\n*\n* @example\n* var factory = require( '@stdlib/stats-base-dists-betaprime-logpdf' ).factory;\n*\n* var logpdf = factory( 0.5, 0.5 );\n*\n* var y = logpdf( 0.8 );\n* // returns ~-0.228\n*\n* y = logpdf( 0.3 );\n* // returns ~-0.364\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,kCAAmC,EACrDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAK,QAAS,8BAA+B,EAC7CC,EAAO,QAAS,gCAAiC,EAqDrD,SAASC,EAAQC,EAAGC,EAAOC,EAAO,CACjC,IAAIC,EAEJ,OACCR,EAAOK,CAAE,GACTL,EAAOM,CAAM,GACbN,EAAOO,CAAK,GACZD,GAAS,GACTC,GAAQ,EAED,IAEHF,GAAK,EAEFF,GAERK,GAAQF,EAAM,GAAQJ,EAAIG,CAAE,EAC5BG,IAASF,EAAMC,GAASN,EAAOI,CAAE,EACjCG,GAAOT,EAAQO,EAAOC,CAAK,EACpBC,EACR,CAKAV,EAAO,QAAUM,ICxGjB,IAAAK,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,iCAAkC,EAC9DC,EAAS,QAAS,kCAAmC,EACrDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAQ,QAAS,iCAAkC,EACnDC,EAAK,QAAS,8BAA+B,EAC7CC,EAAO,QAAS,gCAAiC,EAqBrD,SAASC,EAASC,EAAOC,EAAO,CAC/B,IAAIC,EACJ,GACCP,EAAOK,CAAM,GACbL,EAAOM,CAAK,GACZD,GAAS,GACTC,GAAQ,EAER,OAAOR,EAAkB,GAAI,EAE9B,OAAAS,EAAWR,EAAQM,EAAOC,CAAK,EACxBE,EAaP,SAASA,EAAQC,EAAI,CACpB,IAAIC,EACJ,OAAKV,EAAOS,CAAE,EACN,IAEHA,GAAK,EAEFN,GAERO,GAAQL,EAAM,GAAQH,EAAIO,CAAE,EAC5BC,IAASL,EAAMC,GAASL,EAAOQ,CAAE,EACjCC,GAAOH,EACAG,EACR,CACD,CAKAb,EAAO,QAAUO,IC3CjB,IAAIO,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_main", "__commonJSMin", "exports", "module", "betaln", "isnan", "log1p", "ln", "NINF", "logpdf", "x", "alpha", "beta", "out", "require_factory", "__commonJSMin", "exports", "module", "constantFunction", "betaln", "isnan", "log1p", "ln", "NINF", "factory", "alpha", "beta", "betalnAB", "logpdf", "x", "out", "setReadOnly", "main", "factory"]
}
